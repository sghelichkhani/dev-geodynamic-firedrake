Timestep Number:  0  Timestep:  1e-07
Timestep Number:  1  Timestep:  1e-07
Timestep Number:  2  Timestep:  1e-07
Timestep Number:  3  Timestep:  1e-07
Timestep Number:  4  Timestep:  1e-07
Timestep Number:  5  Timestep:  1e-07
Timestep Number:  6  Timestep:  1e-07
Timestep Number:  7  Timestep:  1e-07
Timestep Number:  8  Timestep:  1e-07
Timestep Number:  9  Timestep:  1e-07
Timestep Number:  10  Timestep:  1e-07
Timestep Number:  11  Timestep:  1e-07
Timestep Number:  12  Timestep:  1e-07
Timestep Number:  13  Timestep:  1e-07
Timestep Number:  14  Timestep:  1e-07
Timestep Number:  15  Timestep:  1e-07
Timestep Number:  16  Timestep:  1e-07
Timestep Number:  17  Timestep:  1e-07
Timestep Number:  18  Timestep:  1e-07
Timestep Number:  19  Timestep:  1e-07
Timestep Number:  20  Timestep:  1e-07
Timestep Number:  21  Timestep:  1e-07
Timestep Number:  22  Timestep:  1e-07
Timestep Number:  23  Timestep:  1e-07
Timestep Number:  24  Timestep:  1e-07
Timestep Number:  25  Timestep:  1e-07
Timestep Number:  26  Timestep:  1e-07
Timestep Number:  27  Timestep:  1e-07
Timestep Number:  28  Timestep:  1e-07
Timestep Number:  29  Timestep:  1e-07
Timestep Number:  30  Timestep:  1e-07
Timestep Number:  31  Timestep:  1e-07
Timestep Number:  32  Timestep:  1e-07
Timestep Number:  33  Timestep:  1e-07
Timestep Number:  34  Timestep:  1e-07
Timestep Number:  35  Timestep:  1e-07
Timestep Number:  36  Timestep:  1e-07
Timestep Number:  37  Timestep:  1e-07
Timestep Number:  38  Timestep:  1e-07
Timestep Number:  39  Timestep:  1e-07
Timestep Number:  40  Timestep:  1e-07
Timestep Number:  41  Timestep:  1e-07
Timestep Number:  42  Timestep:  1e-07
Timestep Number:  43  Timestep:  1e-07
Timestep Number:  44  Timestep:  1e-07
Timestep Number:  45  Timestep:  1e-07
Timestep Number:  46  Timestep:  1e-07
Timestep Number:  47  Timestep:  1e-07
Timestep Number:  48  Timestep:  1e-07
Timestep Number:  49  Timestep:  1e-07
Timestep Number:  50  Timestep:  1e-07
Timestep Number:  51  Timestep:  1e-07
Timestep Number:  52  Timestep:  1e-07
Timestep Number:  53  Timestep:  1e-07
Timestep Number:  54  Timestep:  1e-07
Timestep Number:  55  Timestep:  1e-07
Timestep Number:  56  Timestep:  1e-07
Timestep Number:  57  Timestep:  1e-07
Timestep Number:  58  Timestep:  1e-07
Timestep Number:  59  Timestep:  1e-07
Timestep Number:  60  Timestep:  1e-07
Timestep Number:  61  Timestep:  1e-07
Timestep Number:  62  Timestep:  1e-07
Timestep Number:  63  Timestep:  1e-07
Timestep Number:  64  Timestep:  1e-07
Timestep Number:  65  Timestep:  1e-07
Timestep Number:  66  Timestep:  1e-07
Timestep Number:  67  Timestep:  1e-07
Timestep Number:  68  Timestep:  1e-07
Timestep Number:  69  Timestep:  1e-07
Timestep Number:  70  Timestep:  1e-07
Timestep Number:  71  Timestep:  1e-07
Timestep Number:  72  Timestep:  1e-07
Timestep Number:  73  Timestep:  1e-07
Timestep Number:  74  Timestep:  1e-07
Timestep Number:  75  Timestep:  1e-07
Timestep Number:  76  Timestep:  1e-07
Timestep Number:  77  Timestep:  1e-07
Timestep Number:  78  Timestep:  1e-07
Timestep Number:  79  Timestep:  1e-07
Timestep Number:  80  Timestep:  1e-07
Timestep Number:  81  Timestep:  1e-07
Timestep Number:  82  Timestep:  1e-07
Timestep Number:  83  Timestep:  1e-07
Timestep Number:  84  Timestep:  1e-07
Timestep Number:  85  Timestep:  1e-07
Timestep Number:  86  Timestep:  1e-07
Timestep Number:  87  Timestep:  1e-07
Timestep Number:  88  Timestep:  1e-07
Timestep Number:  89  Timestep:  1e-07
Timestep Number:  90  Timestep:  1e-07
Timestep Number:  91  Timestep:  1e-07
Timestep Number:  92  Timestep:  1e-07
Timestep Number:  93  Timestep:  1e-07
Timestep Number:  94  Timestep:  1e-07
Timestep Number:  95  Timestep:  1e-07
Timestep Number:  96  Timestep:  1e-07
Timestep Number:  97  Timestep:  1e-07
Timestep Number:  98  Timestep:  1e-07
Timestep Number:  99  Timestep:  1e-07
Timestep Number:  100  Timestep:  1e-07
Timestep Number:  101  Timestep:  1e-07
Timestep Number:  102  Timestep:  1e-07
Timestep Number:  103  Timestep:  1e-07
Timestep Number:  104  Timestep:  1e-07
Timestep Number:  105  Timestep:  1e-07
Timestep Number:  106  Timestep:  1e-07
Timestep Number:  107  Timestep:  1e-07
Timestep Number:  108  Timestep:  1e-07
Timestep Number:  109  Timestep:  1e-07
Timestep Number:  110  Timestep:  1e-07
Timestep Number:  111  Timestep:  1e-07
Timestep Number:  112  Timestep:  1e-07
Timestep Number:  113  Timestep:  1e-07
Timestep Number:  114  Timestep:  1e-07
Timestep Number:  115  Timestep:  1e-07
Timestep Number:  116  Timestep:  1e-07
Timestep Number:  117  Timestep:  1e-07
Timestep Number:  118  Timestep:  1e-07
Timestep Number:  119  Timestep:  1e-07
# fwd 1, ||Misfit|| 0.0006064929951247215
# Der 0, ||Misfit|| 0.00121298599024944, ||Misfit IC|| 0.0013574968652239512, ||Grad|| 6.57894763322324e-13
Derivative calculation 0

Quasi-Newton Method with Limited-Memory BFGS
Line Search: Cubic Interpolation satisfying Strong Wolfe Conditions
-------------------------------------------------------------------------------------------------------------
Quasi-Newton Method status output definitions

  iter     - Number of iterates (steps taken) 
  value    - Objective function value 
  gnorm    - Norm of the gradient
  snorm    - Norm of the step (update to optimization vector)
  #fval    - Cumulative number of times the objective function was evaluated
  #grad    - Number of times the gradient was computed
-------------------------------------------------------------------------------------------------------------
  iter  value          gnorm          snorm          #fval     #grad     ls_#fval  ls_#grad  
  0     6.064930e-04   3.175823e-02   

Quasi-Newton Method with Limited-Memory BFGS
Line Search: Cubic Interpolation satisfying Strong Wolfe Conditions
-------------------------------------------------------------------------------------------------------------
Quasi-Newton Method status output definitions

  iter     - Number of iterates (steps taken) 
  value    - Objective function value 
  gnorm    - Norm of the gradient
  snorm    - Norm of the step (update to optimization vector)
  #fval    - Cumulative number of times the objective function was evaluated
  #grad    - Number of times the gradient was computed
-------------------------------------------------------------------------------------------------------------
  iter  value          gnorm          snorm          #fval     #grad     ls_#fval  ls_#grad  
  0     6.064930e-04   3.175823e-02   

Quasi-Newton Method with Limited-Memory BFGS
Line Search: Cubic Interpolation satisfying Strong Wolfe Conditions
-------------------------------------------------------------------------------------------------------------
Quasi-Newton Method status output definitions

  iter     - Number of iterates (steps taken) 
  value    - Objective function value 
  gnorm    - Norm of the gradient
  snorm    - Norm of the step (update to optimization vector)
  #fval    - Cumulative number of times the objective function was evaluated
  #grad    - Number of times the gradient was computed
-------------------------------------------------------------------------------------------------------------
  iter  value          gnorm          snorm          #fval     #grad     ls_#fval  ls_#grad  
  0     6.064930e-04   3.175823e-02   

Quasi-Newton Method with Limited-Memory BFGS
Line Search: Cubic Interpolation satisfying Strong Wolfe Conditions
-------------------------------------------------------------------------------------------------------------
Quasi-Newton Method status output definitions

  iter     - Number of iterates (steps taken) 
  value    - Objective function value 
  gnorm    - Norm of the gradient
  snorm    - Norm of the step (update to optimization vector)
  #fval    - Cumulative number of times the objective function was evaluated
  #grad    - Number of times the gradient was computed
-------------------------------------------------------------------------------------------------------------
  iter  value          gnorm          snorm          #fval     #grad     ls_#fval  ls_#grad  
  0     6.064930e-04   3.175823e-02   

Quasi-Newton Method with Limited-Memory BFGS
Line Search: Cubic Interpolation satisfying Strong Wolfe Conditions
-------------------------------------------------------------------------------------------------------------
Quasi-Newton Method status output definitions

  iter     - Number of iterates (steps taken) 
  value    - Objective function value 
  gnorm    - Norm of the gradient
  snorm    - Norm of the step (update to optimization vector)
  #fval    - Cumulative number of times the objective function was evaluated
  #grad    - Number of times the gradient was computed
-------------------------------------------------------------------------------------------------------------
  iter  value          gnorm          snorm          #fval     #grad     ls_#fval  ls_#grad  
  0     6.064930e-04   3.175823e-02   

Quasi-Newton Method with Limited-Memory BFGS
Line Search: Cubic Interpolation satisfying Strong Wolfe Conditions
-------------------------------------------------------------------------------------------------------------
Quasi-Newton Method status output definitions

  iter     - Number of iterates (steps taken) 
  value    - Objective function value 
  gnorm    - Norm of the gradient
  snorm    - Norm of the step (update to optimization vector)
  #fval    - Cumulative number of times the objective function was evaluated
  #grad    - Number of times the gradient was computed
-------------------------------------------------------------------------------------------------------------
  iter  value          gnorm          snorm          #fval     #grad     ls_#fval  ls_#grad  
  0     6.064930e-04   3.175823e-02   

Quasi-Newton Method with Limited-Memory BFGS
Line Search: Cubic Interpolation satisfying Strong Wolfe Conditions
-------------------------------------------------------------------------------------------------------------
Quasi-Newton Method status output definitions

  iter     - Number of iterates (steps taken) 
  value    - Objective function value 
  gnorm    - Norm of the gradient
  snorm    - Norm of the step (update to optimization vector)
  #fval    - Cumulative number of times the objective function was evaluated
  #grad    - Number of times the gradient was computed
-------------------------------------------------------------------------------------------------------------
  iter  value          gnorm          snorm          #fval     #grad     ls_#fval  ls_#grad  
  0     6.064930e-04   3.175823e-02   

Quasi-Newton Method with Limited-Memory BFGS
Line Search: Cubic Interpolation satisfying Strong Wolfe Conditions
-------------------------------------------------------------------------------------------------------------
Quasi-Newton Method status output definitions

  iter     - Number of iterates (steps taken) 
  value    - Objective function value 
  gnorm    - Norm of the gradient
  snorm    - Norm of the step (update to optimization vector)
  #fval    - Cumulative number of times the objective function was evaluated
  #grad    - Number of times the gradient was computed
-------------------------------------------------------------------------------------------------------------
  iter  value          gnorm          snorm          #fval     #grad     ls_#fval  ls_#grad  
  0     6.064930e-04   3.175823e-02   

Quasi-Newton Method with Limited-Memory BFGS
Line Search: Cubic Interpolation satisfying Strong Wolfe Conditions
-------------------------------------------------------------------------------------------------------------
Quasi-Newton Method status output definitions

  iter     - Number of iterates (steps taken) 
  value    - Objective function value 
  gnorm    - Norm of the gradient
  snorm    - Norm of the step (update to optimization vector)
  #fval    - Cumulative number of times the objective function was evaluated
  #grad    - Number of times the gradient was computed
-------------------------------------------------------------------------------------------------------------
  iter  value          gnorm          snorm          #fval     #grad     ls_#fval  ls_#grad  
  0     6.064930e-04   3.175823e-02   

Quasi-Newton Method with Limited-Memory BFGS
Line Search: Cubic Interpolation satisfying Strong Wolfe Conditions
-------------------------------------------------------------------------------------------------------------
Quasi-Newton Method status output definitions

  iter     - Number of iterates (steps taken) 
  value    - Objective function value 
  gnorm    - Norm of the gradient
  snorm    - Norm of the step (update to optimization vector)
  #fval    - Cumulative number of times the objective function was evaluated
  #grad    - Number of times the gradient was computed
-------------------------------------------------------------------------------------------------------------
  iter  value          gnorm          snorm          #fval     #grad     ls_#fval  ls_#grad  
  0     6.064930e-04   3.175823e-02   

Quasi-Newton Method with Limited-Memory BFGS
Line Search: Cubic Interpolation satisfying Strong Wolfe Conditions
-------------------------------------------------------------------------------------------------------------
Quasi-Newton Method status output definitions

  iter     - Number of iterates (steps taken) 
  value    - Objective function value 
  gnorm    - Norm of the gradient
  snorm    - Norm of the step (update to optimization vector)
  #fval    - Cumulative number of times the objective function was evaluated
  #grad    - Number of times the gradient was computed
-------------------------------------------------------------------------------------------------------------
  iter  value          gnorm          snorm          #fval     #grad     ls_#fval  ls_#grad  
  0     6.064930e-04   3.175823e-02   

Quasi-Newton Method with Limited-Memory BFGS
Line Search: Cubic Interpolation satisfying Strong Wolfe Conditions
-------------------------------------------------------------------------------------------------------------
Quasi-Newton Method status output definitions

  iter     - Number of iterates (steps taken) 
  value    - Objective function value 
  gnorm    - Norm of the gradient
  snorm    - Norm of the step (update to optimization vector)
  #fval    - Cumulative number of times the objective function was evaluated
  #grad    - Number of times the gradient was computed
-------------------------------------------------------------------------------------------------------------
  iter  value          gnorm          snorm          #fval     #grad     ls_#fval  ls_#grad  
  0     6.064930e-04   3.175823e-02   

Quasi-Newton Method with Limited-Memory BFGS
Line Search: Cubic Interpolation satisfying Strong Wolfe Conditions
-------------------------------------------------------------------------------------------------------------
Quasi-Newton Method status output definitions

  iter     - Number of iterates (steps taken) 
  value    - Objective function value 
  gnorm    - Norm of the gradient
  snorm    - Norm of the step (update to optimization vector)
  #fval    - Cumulative number of times the objective function was evaluated
  #grad    - Number of times the gradient was computed
-------------------------------------------------------------------------------------------------------------
  iter  value          gnorm          snorm          #fval     #grad     ls_#fval  ls_#grad  
  0     6.064930e-04   3.175823e-02   

Quasi-Newton Method with Limited-Memory BFGS
Line Search: Cubic Interpolation satisfying Strong Wolfe Conditions
-------------------------------------------------------------------------------------------------------------
Quasi-Newton Method status output definitions

  iter     - Number of iterates (steps taken) 
  value    - Objective function value 
  gnorm    - Norm of the gradient
  snorm    - Norm of the step (update to optimization vector)
  #fval    - Cumulative number of times the objective function was evaluated
  #grad    - Number of times the gradient was computed
-------------------------------------------------------------------------------------------------------------
  iter  value          gnorm          snorm          #fval     #grad     ls_#fval  ls_#grad  
  0     6.064930e-04   3.175823e-02   

Quasi-Newton Method with Limited-Memory BFGS
Line Search: Cubic Interpolation satisfying Strong Wolfe Conditions
-------------------------------------------------------------------------------------------------------------
Quasi-Newton Method status output definitions

  iter     - Number of iterates (steps taken) 
  value    - Objective function value 
  gnorm    - Norm of the gradient
  snorm    - Norm of the step (update to optimization vector)
  #fval    - Cumulative number of times the objective function was evaluated
  #grad    - Number of times the gradient was computed
-------------------------------------------------------------------------------------------------------------
  iter  value          gnorm          snorm          #fval     #grad     ls_#fval  ls_#grad  
  0     6.064930e-04   3.175823e-02   

Quasi-Newton Method with Limited-Memory BFGS
Line Search: Cubic Interpolation satisfying Strong Wolfe Conditions
-------------------------------------------------------------------------------------------------------------
Quasi-Newton Method status output definitions

  iter     - Number of iterates (steps taken) 
  value    - Objective function value 
  gnorm    - Norm of the gradient
  snorm    - Norm of the step (update to optimization vector)
  #fval    - Cumulative number of times the objective function was evaluated
  #grad    - Number of times the gradient was computed
-------------------------------------------------------------------------------------------------------------
  iter  value          gnorm          snorm          #fval     #grad     ls_#fval  ls_#grad  
  0     6.064930e-04   3.175823e-02   
# fwd 2, ||Misfit|| 0.0004702070677404555
# fwd 3, ||Misfit|| 0.00047020706774045544
# Der 1, ||Misfit|| 0.0009404141354809087, ||Misfit IC|| 0.001188292442713818, ||Grad|| 2.7936355280014104e-12
Derivative calculation 1
  1     4.702071e-04   3.703258e-02   3.175823e-02   2         2         1         0         
  1     4.702071e-04   3.703258e-02   3.175823e-02   2         2         1         0         
  1     4.702071e-04   3.703258e-02   3.175823e-02   2         2         1         0         
  1     4.702071e-04   3.703258e-02   3.175823e-02   2         2         1         0         
  1     4.702071e-04   3.703258e-02   3.175823e-02   2         2         1         0         
  1     4.702071e-04   3.703258e-02   3.175823e-02   2         2         1         0         
  1     4.702071e-04   3.703258e-02   3.175823e-02   2         2         1         0         
  1     4.702071e-04   3.703258e-02   3.175823e-02   2         2         1         0         
  1     4.702071e-04   3.703258e-02   3.175823e-02   2         2         1         0         
  1     4.702071e-04   3.703258e-02   3.175823e-02   2         2         1         0         
  1     4.702071e-04   3.703258e-02   3.175823e-02   2         2         1         0         
  1     4.702071e-04   3.703258e-02   3.175823e-02   2         2         1         0         
  1     4.702071e-04   3.703258e-02   3.175823e-02   2         2         1         0         
  1     4.702071e-04   3.703258e-02   3.175823e-02   2         2         1         0         
  1     4.702071e-04   3.703258e-02   3.175823e-02   2         2         1         0         
  1     4.702071e-04   3.703258e-02   3.175823e-02   2         2         1         0         
# fwd 4, ||Misfit|| 0.00037453084633341457
# fwd 5, ||Misfit|| 0.0003745308463334144
# Der 2, ||Misfit|| 0.0007490616926668294, ||Misfit IC|| 0.0008763093821364964, ||Grad|| 1.087545407198579e-12
Derivative calculation 2
  2     3.745308e-04   3.929812e-02   1.283711e-02   3         3         1         0         
  2     3.745308e-04   3.929812e-02   1.283711e-02   3         3         1         0         
  2     3.745308e-04   3.929812e-02   1.283711e-02   3         3         1         0         
  2     3.745308e-04   3.929812e-02   1.283711e-02   3         3         1         0         
  2     3.745308e-04   3.929812e-02   1.283711e-02   3         3         1         0         
  2     3.745308e-04   3.929812e-02   1.283711e-02   3         3         1         0         
  2     3.745308e-04   3.929812e-02   1.283711e-02   3         3         1         0         
  2     3.745308e-04   3.929812e-02   1.283711e-02   3         3         1         0         
  2     3.745308e-04   3.929812e-02   1.283711e-02   3         3         1         0         
  2     3.745308e-04   3.929812e-02   1.283711e-02   3         3         1         0         
  2     3.745308e-04   3.929812e-02   1.283711e-02   3         3         1         0         
  2     3.745308e-04   3.929812e-02   1.283711e-02   3         3         1         0         
  2     3.745308e-04   3.929812e-02   1.283711e-02   3         3         1         0         
  2     3.745308e-04   3.929812e-02   1.283711e-02   3         3         1         0         
  2     3.745308e-04   3.929812e-02   1.283711e-02   3         3         1         0         
  2     3.745308e-04   3.929812e-02   1.283711e-02   3         3         1         0         
# fwd 6, ||Misfit|| 0.00043241294485497943
# fwd 7, ||Misfit|| 0.0003263574733483928
# fwd 8, ||Misfit|| 0.0003263574733483928
# Der 3, ||Misfit|| 0.0006527149466967868, ||Misfit IC|| 0.0008361626980975482, ||Grad|| 4.90372921541424e-13
Derivative calculation 3
  3     3.263575e-04   2.773905e-02   9.578731e-03   5         4         2         0         
  3     3.263575e-04   2.773905e-02   9.578731e-03   5         4         2         0         
  3     3.263575e-04   2.773905e-02   9.578731e-03   5         4         2         0         
  3     3.263575e-04   2.773905e-02   9.578731e-03   5         4         2         0         
  3     3.263575e-04   2.773905e-02   9.578731e-03   5         4         2         0         
  3     3.263575e-04   2.773905e-02   9.578731e-03   5         4         2         0         
  3     3.263575e-04   2.773905e-02   9.578731e-03   5         4         2         0         
  3     3.263575e-04   2.773905e-02   9.578731e-03   5         4         2         0         
  3     3.263575e-04   2.773905e-02   9.578731e-03   5         4         2         0         
  3     3.263575e-04   2.773905e-02   9.578731e-03   5         4         2         0         
  3     3.263575e-04   2.773905e-02   9.578731e-03   5         4         2         0         
  3     3.263575e-04   2.773905e-02   9.578731e-03   5         4         2         0         
  3     3.263575e-04   2.773905e-02   9.578731e-03   5         4         2         0         
  3     3.263575e-04   2.773905e-02   9.578731e-03   5         4         2         0         
  3     3.263575e-04   2.773905e-02   9.578731e-03   5         4         2         0         
  3     3.263575e-04   2.773905e-02   9.578731e-03   5         4         2         0         
# fwd 9, ||Misfit|| 0.00023690662818750782
# fwd 10, ||Misfit|| 0.00023690662818750784
# Der 4, ||Misfit|| 0.0004738132563750154, ||Misfit IC|| 0.0008031825204238381, ||Grad|| 2.6732584508557257e-13
Derivative calculation 4
  4     2.369066e-04   2.006879e-02   5.183232e-03   6         5         1         0         
  4     2.369066e-04   2.006879e-02   5.183232e-03   6         5         1         0         
  4     2.369066e-04   2.006879e-02   5.183232e-03   6         5         1         0         
  4     2.369066e-04   2.006879e-02   5.183232e-03   6         5         1         0         
  4     2.369066e-04   2.006879e-02   5.183232e-03   6         5         1         0         
  4     2.369066e-04   2.006879e-02   5.183232e-03   6         5         1         0         
  4     2.369066e-04   2.006879e-02   5.183232e-03   6         5         1         0         
  4     2.369066e-04   2.006879e-02   5.183232e-03   6         5         1         0         
  4     2.369066e-04   2.006879e-02   5.183232e-03   6         5         1         0         
  4     2.369066e-04   2.006879e-02   5.183232e-03   6         5         1         0         
  4     2.369066e-04   2.006879e-02   5.183232e-03   6         5         1         0         
  4     2.369066e-04   2.006879e-02   5.183232e-03   6         5         1         0         
  4     2.369066e-04   2.006879e-02   5.183232e-03   6         5         1         0         
  4     2.369066e-04   2.006879e-02   5.183232e-03   6         5         1         0         
  4     2.369066e-04   2.006879e-02   5.183232e-03   6         5         1         0         
  4     2.369066e-04   2.006879e-02   5.183232e-03   6         5         1         0         
# fwd 11, ||Misfit|| 0.0005173966560919031
# fwd 12, ||Misfit|| 0.00024397237551462587
# fwd 13, ||Misfit|| 0.00022193393405158272
# fwd 14, ||Misfit|| 0.00022193393405158267
# Der 5, ||Misfit|| 0.00044386786810316436, ||Misfit IC|| 0.0008081538066597968, ||Grad|| 1.1073324317282607e-12
Derivative calculation 5
  5     2.219339e-04   2.639259e-02   1.811223e-03   9         6         3         0         
  5     2.219339e-04   2.639259e-02   1.811223e-03   9         6         3         0         
  5     2.219339e-04   2.639259e-02   1.811223e-03   9         6         3         0         
  5     2.219339e-04   2.639259e-02   1.811223e-03   9         6         3         0         
  5     2.219339e-04   2.639259e-02   1.811223e-03   9         6         3         0         
  5     2.219339e-04   2.639259e-02   1.811223e-03   9         6         3         0         
  5     2.219339e-04   2.639259e-02   1.811223e-03   9         6         3         0         
  5     2.219339e-04   2.639259e-02   1.811223e-03   9         6         3         0         
  5     2.219339e-04   2.639259e-02   1.811223e-03   9         6         3         0         
  5     2.219339e-04   2.639259e-02   1.811223e-03   9         6         3         0         
  5     2.219339e-04   2.639259e-02   1.811223e-03   9         6         3         0         
  5     2.219339e-04   2.639259e-02   1.811223e-03   9         6         3         0         
  5     2.219339e-04   2.639259e-02   1.811223e-03   9         6         3         0         
  5     2.219339e-04   2.639259e-02   1.811223e-03   9         6         3         0         
  5     2.219339e-04   2.639259e-02   1.811223e-03   9         6         3         0         
  5     2.219339e-04   2.639259e-02   1.811223e-03   9         6         3         0         
# fwd 15, ||Misfit|| 0.00021118047363814102
# fwd 16, ||Misfit|| 0.00021118047363814107
# Der 6, ||Misfit|| 0.0004223609472762828, ||Misfit IC|| 0.0009312732427003425, ||Grad|| 3.0744125335544093e-12
Derivative calculation 6
  6     2.111805e-04   5.207660e-02   7.502659e-03   10        7         1         0         
  6     2.111805e-04   5.207660e-02   7.502659e-03   10        7         1         0         
  6     2.111805e-04   5.207660e-02   7.502659e-03   10        7         1         0         
  6     2.111805e-04   5.207660e-02   7.502659e-03   10        7         1         0         
  6     2.111805e-04   5.207660e-02   7.502659e-03   10        7         1         0         
  6     2.111805e-04   5.207660e-02   7.502659e-03   10        7         1         0         
  6     2.111805e-04   5.207660e-02   7.502659e-03   10        7         1         0         
  6     2.111805e-04   5.207660e-02   7.502659e-03   10        7         1         0         
  6     2.111805e-04   5.207660e-02   7.502659e-03   10        7         1         0         
  6     2.111805e-04   5.207660e-02   7.502659e-03   10        7         1         0         
  6     2.111805e-04   5.207660e-02   7.502659e-03   10        7         1         0         
  6     2.111805e-04   5.207660e-02   7.502659e-03   10        7         1         0         
  6     2.111805e-04   5.207660e-02   7.502659e-03   10        7         1         0         
  6     2.111805e-04   5.207660e-02   7.502659e-03   10        7         1         0         
  6     2.111805e-04   5.207660e-02   7.502659e-03   10        7         1         0         
  6     2.111805e-04   5.207660e-02   7.502659e-03   10        7         1         0         
# fwd 17, ||Misfit|| 0.00038034013186478196
# fwd 18, ||Misfit|| 0.0003100204859267002
# fwd 19, ||Misfit|| 0.00017567145054631818
# fwd 20, ||Misfit|| 0.00017567145054631818
# Der 7, ||Misfit|| 0.0003513429010926364, ||Misfit IC|| 0.0009241237563613475, ||Grad|| 7.41996727802036e-13
Derivative calculation 7
  7     1.756715e-04   2.973712e-02   1.628265e-03   13        8         3         0         
  7     1.756715e-04   2.973712e-02   1.628265e-03   13        8         3         0         
  7     1.756715e-04   2.973712e-02   1.628265e-03   13        8         3         0         
  7     1.756715e-04   2.973712e-02   1.628265e-03   13        8         3         0         
  7     1.756715e-04   2.973712e-02   1.628265e-03   13        8         3         0         
  7     1.756715e-04   2.973712e-02   1.628265e-03   13        8         3         0         
  7     1.756715e-04   2.973712e-02   1.628265e-03   13        8         3         0         
  7     1.756715e-04   2.973712e-02   1.628265e-03   13        8         3         0         
  7     1.756715e-04   2.973712e-02   1.628265e-03   13        8         3         0         
  7     1.756715e-04   2.973712e-02   1.628265e-03   13        8         3         0         
  7     1.756715e-04   2.973712e-02   1.628265e-03   13        8         3         0         
  7     1.756715e-04   2.973712e-02   1.628265e-03   13        8         3         0         
  7     1.756715e-04   2.973712e-02   1.628265e-03   13        8         3         0         
  7     1.756715e-04   2.973712e-02   1.628265e-03   13        8         3         0         
  7     1.756715e-04   2.973712e-02   1.628265e-03   13        8         3         0         
  7     1.756715e-04   2.973712e-02   1.628265e-03   13        8         3         0         
# fwd 21, ||Misfit|| 0.0003511155753410475
# fwd 22, ||Misfit|| 0.00021050929038275725
# fwd 23, ||Misfit|| 0.00017418584615597261
# fwd 24, ||Misfit|| 0.0001741858461559726
# Der 8, ||Misfit|| 0.0003483716923119453, ||Misfit IC|| 0.0009242647982506227, ||Grad|| 4.696730712771803e-13
Derivative calculation 8
  8     1.741858e-04   2.394381e-02   1.302363e-04   16        9         3         0         
  8     1.741858e-04   2.394381e-02   1.302363e-04   16        9         3         0         
  8     1.741858e-04   2.394381e-02   1.302363e-04   16        9         3         0         
  8     1.741858e-04   2.394381e-02   1.302363e-04   16        9         3         0         
  8     1.741858e-04   2.394381e-02   1.302363e-04   16        9         3         0         
  8     1.741858e-04   2.394381e-02   1.302363e-04   16        9         3         0         
  8     1.741858e-04   2.394381e-02   1.302363e-04   16        9         3         0         
  8     1.741858e-04   2.394381e-02   1.302363e-04   16        9         3         0         
  8     1.741858e-04   2.394381e-02   1.302363e-04   16        9         3         0         
  8     1.741858e-04   2.394381e-02   1.302363e-04   16        9         3         0         
  8     1.741858e-04   2.394381e-02   1.302363e-04   16        9         3         0         
  8     1.741858e-04   2.394381e-02   1.302363e-04   16        9         3         0         
  8     1.741858e-04   2.394381e-02   1.302363e-04   16        9         3         0         
  8     1.741858e-04   2.394381e-02   1.302363e-04   16        9         3         0         
  8     1.741858e-04   2.394381e-02   1.302363e-04   16        9         3         0         
  8     1.741858e-04   2.394381e-02   1.302363e-04   16        9         3         0         
# fwd 25, ||Misfit|| 0.00025468612667189504
# fwd 26, ||Misfit|| 0.00017643939251828052
# fwd 27, ||Misfit|| 0.00017328157368274208
# fwd 28, ||Misfit|| 0.00017328157368274216
# Der 9, ||Misfit|| 0.0003465631473654841, ||Misfit IC|| 0.0009245534717685542, ||Grad|| 3.4525708115266947e-13
Derivative calculation 9
  9     1.732816e-04   1.897413e-02   1.573445e-04   19        10        3         0         
  9     1.732816e-04   1.897413e-02   1.573445e-04   19        10        3         0         
  9     1.732816e-04   1.897413e-02   1.573445e-04   19        10        3         0         
  9     1.732816e-04   1.897413e-02   1.573445e-04   19        10        3         0         
  9     1.732816e-04   1.897413e-02   1.573445e-04   19        10        3         0         
  9     1.732816e-04   1.897413e-02   1.573445e-04   19        10        3         0         
  9     1.732816e-04   1.897413e-02   1.573445e-04   19        10        3         0         
  9     1.732816e-04   1.897413e-02   1.573445e-04   19        10        3         0         
  9     1.732816e-04   1.897413e-02   1.573445e-04   19        10        3         0         
  9     1.732816e-04   1.897413e-02   1.573445e-04   19        10        3         0         
  9     1.732816e-04   1.897413e-02   1.573445e-04   19        10        3         0         
  9     1.732816e-04   1.897413e-02   1.573445e-04   19        10        3         0         
  9     1.732816e-04   1.897413e-02   1.573445e-04   19        10        3         0         
  9     1.732816e-04   1.897413e-02   1.573445e-04   19        10        3         0         
  9     1.732816e-04   1.897413e-02   1.573445e-04   19        10        3         0         
  9     1.732816e-04   1.897413e-02   1.573445e-04   19        10        3         0         
# fwd 29, ||Misfit|| 0.00016707418684987403
# fwd 30, ||Misfit|| 0.00016707418684987403
# Der 10, ||Misfit|| 0.0003341483736997484, ||Misfit IC|| 0.000935082654548425, ||Grad|| 2.1637493422447496e-12
Derivative calculation 10
  10    1.670742e-04   3.560633e-02   9.713553e-04   20        11        1         0         
  10    1.670742e-04   3.560633e-02   9.713553e-04   20        11        1         0         
  10    1.670742e-04   3.560633e-02   9.713553e-04   20        11        1         0         
  10    1.670742e-04   3.560633e-02   9.713553e-04   20        11        1         0         
  10    1.670742e-04   3.560633e-02   9.713553e-04   20        11        1         0         
  10    1.670742e-04   3.560633e-02   9.713553e-04   20        11        1         0         
  10    1.670742e-04   3.560633e-02   9.713553e-04   20        11        1         0         
  10    1.670742e-04   3.560633e-02   9.713553e-04   20        11        1         0         
  10    1.670742e-04   3.560633e-02   9.713553e-04   20        11        1         0         
  10    1.670742e-04   3.560633e-02   9.713553e-04   20        11        1         0         
  10    1.670742e-04   3.560633e-02   9.713553e-04   20        11        1         0         
  10    1.670742e-04   3.560633e-02   9.713553e-04   20        11        1         0         
  10    1.670742e-04   3.560633e-02   9.713553e-04   20        11        1         0         
  10    1.670742e-04   3.560633e-02   9.713553e-04   20        11        1         0         
  10    1.670742e-04   3.560633e-02   9.713553e-04   20        11        1         0         
  10    1.670742e-04   3.560633e-02   9.713553e-04   20        11        1         0         
# fwd 31, ||Misfit|| 0.00019089811400111286
# fwd 32, ||Misfit|| 0.00017112278268914107
# fwd 33, ||Misfit|| 0.00016502343261963248
# fwd 34, ||Misfit|| 0.00016502343261963243
# Der 11, ||Misfit|| 0.0003300468652392641, ||Misfit IC|| 0.0009289171198134767, ||Grad|| 1.1789946643305061e-12
Derivative calculation 11
  11    1.650234e-04   3.621671e-02   9.858563e-04   23        12        3         0         
  11    1.650234e-04   3.621671e-02   9.858563e-04   23        12        3         0         
  11    1.650234e-04   3.621671e-02   9.858563e-04   23        12        3         0         
  11    1.650234e-04   3.621671e-02   9.858563e-04   23        12        3         0         
  11    1.650234e-04   3.621671e-02   9.858563e-04   23        12        3         0         
  11    1.650234e-04   3.621671e-02   9.858563e-04   23        12        3         0         
  11    1.650234e-04   3.621671e-02   9.858563e-04   23        12        3         0         
  11    1.650234e-04   3.621671e-02   9.858563e-04   23        12        3         0         
  11    1.650234e-04   3.621671e-02   9.858563e-04   23        12        3         0         
  11    1.650234e-04   3.621671e-02   9.858563e-04   23        12        3         0         
  11    1.650234e-04   3.621671e-02   9.858563e-04   23        12        3         0         
  11    1.650234e-04   3.621671e-02   9.858563e-04   23        12        3         0         
  11    1.650234e-04   3.621671e-02   9.858563e-04   23        12        3         0         
  11    1.650234e-04   3.621671e-02   9.858563e-04   23        12        3         0         
  11    1.650234e-04   3.621671e-02   9.858563e-04   23        12        3         0         
  11    1.650234e-04   3.621671e-02   9.858563e-04   23        12        3         0         
# fwd 35, ||Misfit|| 0.0003584479818470014
# fwd 36, ||Misfit|| 0.00025261165313835414
# fwd 37, ||Misfit|| 0.000161746292565246
# fwd 38, ||Misfit|| 0.00016174629256524606
# Der 12, ||Misfit|| 0.00032349258513049265, ||Misfit IC|| 0.0009287162216827921, ||Grad|| 5.164199881669503e-13
Derivative calculation 12
  12    1.617463e-04   2.542915e-02   2.350942e-04   26        13        3         0         
  12    1.617463e-04   2.542915e-02   2.350942e-04   26        13        3         0         
  12    1.617463e-04   2.542915e-02   2.350942e-04   26        13        3         0         
  12    1.617463e-04   2.542915e-02   2.350942e-04   26        13        3         0         
  12    1.617463e-04   2.542915e-02   2.350942e-04   26        13        3         0         
  12    1.617463e-04   2.542915e-02   2.350942e-04   26        13        3         0         
  12    1.617463e-04   2.542915e-02   2.350942e-04   26        13        3         0         
  12    1.617463e-04   2.542915e-02   2.350942e-04   26        13        3         0         
  12    1.617463e-04   2.542915e-02   2.350942e-04   26        13        3         0         
  12    1.617463e-04   2.542915e-02   2.350942e-04   26        13        3         0         
  12    1.617463e-04   2.542915e-02   2.350942e-04   26        13        3         0         
  12    1.617463e-04   2.542915e-02   2.350942e-04   26        13        3         0         
  12    1.617463e-04   2.542915e-02   2.350942e-04   26        13        3         0         
  12    1.617463e-04   2.542915e-02   2.350942e-04   26        13        3         0         
  12    1.617463e-04   2.542915e-02   2.350942e-04   26        13        3         0         
  12    1.617463e-04   2.542915e-02   2.350942e-04   26        13        3         0         
# fwd 39, ||Misfit|| 0.00028640342993495457
# fwd 40, ||Misfit|| 0.0001685299375937133
# fwd 41, ||Misfit|| 0.00016045011480259877
# fwd 42, ||Misfit|| 0.0001604501148025987
# Der 13, ||Misfit|| 0.0003209002296051974, ||Misfit IC|| 0.000929220444506002, ||Grad|| 3.0344848870621535e-13
Derivative calculation 13
  13    1.604501e-04   1.793488e-02   1.616556e-04   29        14        3         0         
  13    1.604501e-04   1.793488e-02   1.616556e-04   29        14        3         0         
  13    1.604501e-04   1.793488e-02   1.616556e-04   29        14        3         0         
  13    1.604501e-04   1.793488e-02   1.616556e-04   29        14        3         0         
  13    1.604501e-04   1.793488e-02   1.616556e-04   29        14        3         0         
  13    1.604501e-04   1.793488e-02   1.616556e-04   29        14        3         0         
  13    1.604501e-04   1.793488e-02   1.616556e-04   29        14        3         0         
  13    1.604501e-04   1.793488e-02   1.616556e-04   29        14        3         0         
  13    1.604501e-04   1.793488e-02   1.616556e-04   29        14        3         0         
  13    1.604501e-04   1.793488e-02   1.616556e-04   29        14        3         0         
  13    1.604501e-04   1.793488e-02   1.616556e-04   29        14        3         0         
  13    1.604501e-04   1.793488e-02   1.616556e-04   29        14        3         0         
  13    1.604501e-04   1.793488e-02   1.616556e-04   29        14        3         0         
  13    1.604501e-04   1.793488e-02   1.616556e-04   29        14        3         0         
  13    1.604501e-04   1.793488e-02   1.616556e-04   29        14        3         0         
  13    1.604501e-04   1.793488e-02   1.616556e-04   29        14        3         0         
# fwd 43, ||Misfit|| 0.00014124413436293306
# fwd 44, ||Misfit|| 0.0001412441343629331
# Der 14, ||Misfit|| 0.00028248826872586557, ||Misfit IC|| 0.0009536951394360522, ||Grad|| 2.9221697966709363e-13
Derivative calculation 14
  14    1.412441e-04   1.545996e-02   1.705010e-03   30        15        1         0         
  14    1.412441e-04   1.545996e-02   1.705010e-03   30        15        1         0         
  14    1.412441e-04   1.545996e-02   1.705010e-03   30        15        1         0         
  14    1.412441e-04   1.545996e-02   1.705010e-03   30        15        1         0         
  14    1.412441e-04   1.545996e-02   1.705010e-03   30        15        1         0         
  14    1.412441e-04   1.545996e-02   1.705010e-03   30        15        1         0         
  14    1.412441e-04   1.545996e-02   1.705010e-03   30        15        1         0         
  14    1.412441e-04   1.545996e-02   1.705010e-03   30        15        1         0         
  14    1.412441e-04   1.545996e-02   1.705010e-03   30        15        1         0         
  14    1.412441e-04   1.545996e-02   1.705010e-03   30        15        1         0         
  14    1.412441e-04   1.545996e-02   1.705010e-03   30        15        1         0         
  14    1.412441e-04   1.545996e-02   1.705010e-03   30        15        1         0         
  14    1.412441e-04   1.545996e-02   1.705010e-03   30        15        1         0         
  14    1.412441e-04   1.545996e-02   1.705010e-03   30        15        1         0         
  14    1.412441e-04   1.545996e-02   1.705010e-03   30        15        1         0         
  14    1.412441e-04   1.545996e-02   1.705010e-03   30        15        1         0         
# fwd 45, ||Misfit|| 0.00014316107257034613
# fwd 46, ||Misfit|| 0.00012879281259046445
# fwd 47, ||Misfit|| 0.00012879281259046434
# Der 15, ||Misfit|| 0.00025758562518092955, ||Misfit IC|| 0.0010102418091819908, ||Grad|| 2.7799129495843507e-12
Derivative calculation 15
  15    1.287928e-04   5.047554e-02   3.087784e-03   32        16        2         0         
  15    1.287928e-04   5.047554e-02   3.087784e-03   32        16        2         0         
  15    1.287928e-04   5.047554e-02   3.087784e-03   32        16        2         0         
  15    1.287928e-04   5.047554e-02   3.087784e-03   32        16        2         0         
  15    1.287928e-04   5.047554e-02   3.087784e-03   32        16        2         0         
  15    1.287928e-04   5.047554e-02   3.087784e-03   32        16        2         0         
  15    1.287928e-04   5.047554e-02   3.087784e-03   32        16        2         0         
  15    1.287928e-04   5.047554e-02   3.087784e-03   32        16        2         0         
  15    1.287928e-04   5.047554e-02   3.087784e-03   32        16        2         0         
  15    1.287928e-04   5.047554e-02   3.087784e-03   32        16        2         0         
  15    1.287928e-04   5.047554e-02   3.087784e-03   32        16        2         0         
  15    1.287928e-04   5.047554e-02   3.087784e-03   32        16        2         0         
  15    1.287928e-04   5.047554e-02   3.087784e-03   32        16        2         0         
  15    1.287928e-04   5.047554e-02   3.087784e-03   32        16        2         0         
  15    1.287928e-04   5.047554e-02   3.087784e-03   32        16        2         0         
  15    1.287928e-04   5.047554e-02   3.087784e-03   32        16        2         0         
# fwd 48, ||Misfit|| 0.0005838755364019994
# fwd 49, ||Misfit|| 0.0004127162884749189
# fwd 50, ||Misfit|| 0.00014517911390510705
# fwd 51, ||Misfit|| 0.00011972151290833661
# fwd 52, ||Misfit|| 0.00011972151290833659
[mpiexec@kerguelen] Sending Ctrl-C to processes as requested
[mpiexec@kerguelen] Press Ctrl-C again to force abort
/home/sia/firedrake/src/firedrake/firedrake/extrusion_utils.py:117: LoopyWarning: 'lang_version' was not passed to make_function(). To avoid this warning, pass lang_version=(2018, 2) in this invocation. (Or say 'from loopy.version import LOOPY_USE_LANGUAGE_VERSION_2018_2' in the global scope of the calling frame.)
  ast = lp.make_function(domains, instructions, data, name=name, target=lp.CTarget(),
/home/sia/firedrake/src/firedrake/firedrake/extrusion_utils.py:117: LoopyWarning: 'lang_version' was not passed to make_function(). To avoid this warning, pass lang_version=(2018, 2) in this invocation. (Or say 'from loopy.version import LOOPY_USE_LANGUAGE_VERSION_2018_2' in the global scope of the calling frame.)
  ast = lp.make_function(domains, instructions, data, name=name, target=lp.CTarget(),
/home/sia/firedrake/src/firedrake/firedrake/extrusion_utils.py:117: LoopyWarning: 'lang_version' was not passed to make_function(). To avoid this warning, pass lang_version=(2018, 2) in this invocation. (Or say 'from loopy.version import LOOPY_USE_LANGUAGE_VERSION_2018_2' in the global scope of the calling frame.)
  ast = lp.make_function(domains, instructions, data, name=name, target=lp.CTarget(),
/home/sia/firedrake/src/firedrake/firedrake/extrusion_utils.py:117: LoopyWarning: 'lang_version' was not passed to make_function(). To avoid this warning, pass lang_version=(2018, 2) in this invocation. (Or say 'from loopy.version import LOOPY_USE_LANGUAGE_VERSION_2018_2' in the global scope of the calling frame.)
  ast = lp.make_function(domains, instructions, data, name=name, target=lp.CTarget(),
/home/sia/firedrake/src/firedrake/firedrake/extrusion_utils.py:117: LoopyWarning: 'lang_version' was not passed to make_function(). To avoid this warning, pass lang_version=(2018, 2) in this invocation. (Or say 'from loopy.version import LOOPY_USE_LANGUAGE_VERSION_2018_2' in the global scope of the calling frame.)
  ast = lp.make_function(domains, instructions, data, name=name, target=lp.CTarget(),
/home/sia/firedrake/src/firedrake/firedrake/extrusion_utils.py:117: LoopyWarning: 'lang_version' was not passed to make_function(). To avoid this warning, pass lang_version=(2018, 2) in this invocation. (Or say 'from loopy.version import LOOPY_USE_LANGUAGE_VERSION_2018_2' in the global scope of the calling frame.)
  ast = lp.make_function(domains, instructions, data, name=name, target=lp.CTarget(),
/home/sia/firedrake/src/firedrake/firedrake/extrusion_utils.py:117: LoopyWarning: 'lang_version' was not passed to make_function(). To avoid this warning, pass lang_version=(2018, 2) in this invocation. (Or say 'from loopy.version import LOOPY_USE_LANGUAGE_VERSION_2018_2' in the global scope of the calling frame.)
  ast = lp.make_function(domains, instructions, data, name=name, target=lp.CTarget(),
/home/sia/firedrake/src/firedrake/firedrake/extrusion_utils.py:117: LoopyWarning: 'lang_version' was not passed to make_function(). To avoid this warning, pass lang_version=(2018, 2) in this invocation. (Or say 'from loopy.version import LOOPY_USE_LANGUAGE_VERSION_2018_2' in the global scope of the calling frame.)
  ast = lp.make_function(domains, instructions, data, name=name, target=lp.CTarget(),
/home/sia/firedrake/src/firedrake/firedrake/extrusion_utils.py:117: LoopyWarning: 'lang_version' was not passed to make_function(). To avoid this warning, pass lang_version=(2018, 2) in this invocation. (Or say 'from loopy.version import LOOPY_USE_LANGUAGE_VERSION_2018_2' in the global scope of the calling frame.)
  ast = lp.make_function(domains, instructions, data, name=name, target=lp.CTarget(),
/home/sia/firedrake/src/firedrake/firedrake/extrusion_utils.py:117: LoopyWarning: 'lang_version' was not passed to make_function(). To avoid this warning, pass lang_version=(2018, 2) in this invocation. (Or say 'from loopy.version import LOOPY_USE_LANGUAGE_VERSION_2018_2' in the global scope of the calling frame.)
  ast = lp.make_function(domains, instructions, data, name=name, target=lp.CTarget(),
/home/sia/firedrake/src/firedrake/firedrake/extrusion_utils.py:117: LoopyWarning: 'lang_version' was not passed to make_function(). To avoid this warning, pass lang_version=(2018, 2) in this invocation. (Or say 'from loopy.version import LOOPY_USE_LANGUAGE_VERSION_2018_2' in the global scope of the calling frame.)
  ast = lp.make_function(domains, instructions, data, name=name, target=lp.CTarget(),
/home/sia/firedrake/src/firedrake/firedrake/extrusion_utils.py:117: LoopyWarning: 'lang_version' was not passed to make_function(). To avoid this warning, pass lang_version=(2018, 2) in this invocation. (Or say 'from loopy.version import LOOPY_USE_LANGUAGE_VERSION_2018_2' in the global scope of the calling frame.)
  ast = lp.make_function(domains, instructions, data, name=name, target=lp.CTarget(),
/home/sia/firedrake/src/firedrake/firedrake/extrusion_utils.py:117: LoopyWarning: 'lang_version' was not passed to make_function(). To avoid this warning, pass lang_version=(2018, 2) in this invocation. (Or say 'from loopy.version import LOOPY_USE_LANGUAGE_VERSION_2018_2' in the global scope of the calling frame.)
  ast = lp.make_function(domains, instructions, data, name=name, target=lp.CTarget(),
/home/sia/firedrake/src/firedrake/firedrake/extrusion_utils.py:117: LoopyWarning: 'lang_version' was not passed to make_function(). To avoid this warning, pass lang_version=(2018, 2) in this invocation. (Or say 'from loopy.version import LOOPY_USE_LANGUAGE_VERSION_2018_2' in the global scope of the calling frame.)
  ast = lp.make_function(domains, instructions, data, name=name, target=lp.CTarget(),
/home/sia/firedrake/src/firedrake/firedrake/extrusion_utils.py:117: LoopyWarning: 'lang_version' was not passed to make_function(). To avoid this warning, pass lang_version=(2018, 2) in this invocation. (Or say 'from loopy.version import LOOPY_USE_LANGUAGE_VERSION_2018_2' in the global scope of the calling frame.)
  ast = lp.make_function(domains, instructions, data, name=name, target=lp.CTarget(),
/home/sia/firedrake/src/firedrake/firedrake/extrusion_utils.py:117: LoopyWarning: 'lang_version' was not passed to make_function(). To avoid this warning, pass lang_version=(2018, 2) in this invocation. (Or say 'from loopy.version import LOOPY_USE_LANGUAGE_VERSION_2018_2' in the global scope of the calling frame.)
  ast = lp.make_function(domains, instructions, data, name=name, target=lp.CTarget(),
Traceback (most recent call last):
  File "adj_reconst_ROL_fromprms.py", line 278, in <module>
    sol = rol_solver.solve()
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/optimization/rol_solver.py", line 217, in solve
    self.solver.solve()
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/optimization/rol_solver.py", line 23, in gradient
    self.deriv = self.rf.derivative()  # forget=False, project=False)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/reduced_functional.py", line 61, in derivative
    derivatives = compute_gradient(self.functional,
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/drivers.py", line 29, in compute_gradient
    tape.evaluate_adj(markings=True)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 140, in evaluate_adj
    self._blocks[i].evaluate_adj(markings=markings)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/block.py", line 127, in evaluate_adj
    prepared = self.prepare_evaluate_adj(inputs, adj_inputs, relevant_dependencies)
  File "/home/sia/firedrake/src/pyadjoint/dolfin_adjoint_common/blocks/solving.py", line 146, in prepare_evaluate_adj
    adj_sol, adj_sol_bdy = self._assemble_and_solve_adj_eq(dFdu_form, dJdu, compute_bdy)
  File "/home/sia/firedrake/src/pyadjoint/dolfin_adjoint_common/blocks/solving.py", line 171, in _assemble_and_solve_adj_eq
    self.compat.linalg_solve(dFdu, adj_sol.vector(), dJdu, *self.adj_args, **self.adj_kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/adjoint/solving.py", line 50, in wrapper
    output = solve(*args, **kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/solving.py", line 132, in solve
    return _la_solve(*args, **kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/solving.py", line 243, in _la_solve
    solver.solve(x, b)
  File "/home/sia/firedrake/src/firedrake/firedrake/linear_solver.py", line 158, in solve
    self.ksp.solve(rhs, solution)
KeyboardInterrupt
application called MPI_Abort(MPI_COMM_WORLD, 1) - process 2
Traceback (most recent call last):
  File "adj_reconst_ROL_fromprms.py", line 278, in <module>
    sol = rol_solver.solve()
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/optimization/rol_solver.py", line 217, in solve
    self.solver.solve()
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/optimization/rol_solver.py", line 23, in gradient
    self.deriv = self.rf.derivative()  # forget=False, project=False)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/reduced_functional.py", line 61, in derivative
    derivatives = compute_gradient(self.functional,
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/drivers.py", line 29, in compute_gradient
    tape.evaluate_adj(markings=True)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 140, in evaluate_adj
    self._blocks[i].evaluate_adj(markings=markings)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/block.py", line 127, in evaluate_adj
    prepared = self.prepare_evaluate_adj(inputs, adj_inputs, relevant_dependencies)
  File "/home/sia/firedrake/src/pyadjoint/dolfin_adjoint_common/blocks/solving.py", line 146, in prepare_evaluate_adj
    adj_sol, adj_sol_bdy = self._assemble_and_solve_adj_eq(dFdu_form, dJdu, compute_bdy)
  File "/home/sia/firedrake/src/pyadjoint/dolfin_adjoint_common/blocks/solving.py", line 171, in _assemble_and_solve_adj_eq
    self.compat.linalg_solve(dFdu, adj_sol.vector(), dJdu, *self.adj_args, **self.adj_kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/adjoint/solving.py", line 50, in wrapper
    output = solve(*args, **kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/solving.py", line 132, in solve
    return _la_solve(*args, **kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/solving.py", line 243, in _la_solve
    solver.solve(x, b)
  File "/home/sia/firedrake/src/firedrake/firedrake/linear_solver.py", line 158, in solve
    self.ksp.solve(rhs, solution)
KeyboardInterrupt
application called MPI_Abort(MPI_COMM_WORLD, 1) - process 12
Traceback (most recent call last):
  File "adj_reconst_ROL_fromprms.py", line 278, in <module>
    sol = rol_solver.solve()
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/optimization/rol_solver.py", line 217, in solve
    self.solver.solve()
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/optimization/rol_solver.py", line 23, in gradient
    self.deriv = self.rf.derivative()  # forget=False, project=False)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/reduced_functional.py", line 61, in derivative
    derivatives = compute_gradient(self.functional,
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/drivers.py", line 29, in compute_gradient
    tape.evaluate_adj(markings=True)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 140, in evaluate_adj
    self._blocks[i].evaluate_adj(markings=markings)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/block.py", line 127, in evaluate_adj
    prepared = self.prepare_evaluate_adj(inputs, adj_inputs, relevant_dependencies)
  File "/home/sia/firedrake/src/pyadjoint/dolfin_adjoint_common/blocks/solving.py", line 146, in prepare_evaluate_adj
    adj_sol, adj_sol_bdy = self._assemble_and_solve_adj_eq(dFdu_form, dJdu, compute_bdy)
  File "/home/sia/firedrake/src/pyadjoint/dolfin_adjoint_common/blocks/solving.py", line 171, in _assemble_and_solve_adj_eq
    self.compat.linalg_solve(dFdu, adj_sol.vector(), dJdu, *self.adj_args, **self.adj_kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/adjoint/solving.py", line 50, in wrapper
    output = solve(*args, **kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/solving.py", line 132, in solve
    return _la_solve(*args, **kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/solving.py", line 243, in _la_solve
    solver.solve(x, b)
  File "/home/sia/firedrake/src/firedrake/firedrake/linear_solver.py", line 158, in solve
    self.ksp.solve(rhs, solution)
KeyboardInterrupt
application called MPI_Abort(MPI_COMM_WORLD, 1) - process 5
Traceback (most recent call last):
  File "adj_reconst_ROL_fromprms.py", line 278, in <module>
    sol = rol_solver.solve()
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/optimization/rol_solver.py", line 217, in solve
    self.solver.solve()
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/optimization/rol_solver.py", line 23, in gradient
    self.deriv = self.rf.derivative()  # forget=False, project=False)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/reduced_functional.py", line 61, in derivative
    derivatives = compute_gradient(self.functional,
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/drivers.py", line 29, in compute_gradient
    tape.evaluate_adj(markings=True)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 140, in evaluate_adj
    self._blocks[i].evaluate_adj(markings=markings)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/block.py", line 127, in evaluate_adj
    prepared = self.prepare_evaluate_adj(inputs, adj_inputs, relevant_dependencies)
  File "/home/sia/firedrake/src/pyadjoint/dolfin_adjoint_common/blocks/solving.py", line 146, in prepare_evaluate_adj
    adj_sol, adj_sol_bdy = self._assemble_and_solve_adj_eq(dFdu_form, dJdu, compute_bdy)
  File "/home/sia/firedrake/src/pyadjoint/dolfin_adjoint_common/blocks/solving.py", line 171, in _assemble_and_solve_adj_eq
    self.compat.linalg_solve(dFdu, adj_sol.vector(), dJdu, *self.adj_args, **self.adj_kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/adjoint/solving.py", line 50, in wrapper
    output = solve(*args, **kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/solving.py", line 132, in solve
    return _la_solve(*args, **kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/solving.py", line 243, in _la_solve
    solver.solve(x, b)
  File "/home/sia/firedrake/src/firedrake/firedrake/linear_solver.py", line 158, in solve
    self.ksp.solve(rhs, solution)
KeyboardInterrupt
application called MPI_Abort(MPI_COMM_WORLD, 1) - process 3
Traceback (most recent call last):
  File "adj_reconst_ROL_fromprms.py", line 278, in <module>
    sol = rol_solver.solve()
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/optimization/rol_solver.py", line 217, in solve
    self.solver.solve()
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/optimization/rol_solver.py", line 23, in gradient
    self.deriv = self.rf.derivative()  # forget=False, project=False)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/reduced_functional.py", line 61, in derivative
    derivatives = compute_gradient(self.functional,
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/drivers.py", line 29, in compute_gradient
    tape.evaluate_adj(markings=True)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 140, in evaluate_adj
    self._blocks[i].evaluate_adj(markings=markings)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/block.py", line 127, in evaluate_adj
    prepared = self.prepare_evaluate_adj(inputs, adj_inputs, relevant_dependencies)
  File "/home/sia/firedrake/src/pyadjoint/dolfin_adjoint_common/blocks/solving.py", line 146, in prepare_evaluate_adj
    adj_sol, adj_sol_bdy = self._assemble_and_solve_adj_eq(dFdu_form, dJdu, compute_bdy)
  File "/home/sia/firedrake/src/pyadjoint/dolfin_adjoint_common/blocks/solving.py", line 171, in _assemble_and_solve_adj_eq
    self.compat.linalg_solve(dFdu, adj_sol.vector(), dJdu, *self.adj_args, **self.adj_kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/adjoint/solving.py", line 50, in wrapper
    output = solve(*args, **kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/solving.py", line 132, in solve
    return _la_solve(*args, **kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/solving.py", line 243, in _la_solve
    solver.solve(x, b)
  File "/home/sia/firedrake/src/firedrake/firedrake/linear_solver.py", line 158, in solve
    self.ksp.solve(rhs, solution)
KeyboardInterrupt
application called MPI_Abort(MPI_COMM_WORLD, 1) - process 8
Traceback (most recent call last):
  File "adj_reconst_ROL_fromprms.py", line 278, in <module>
    sol = rol_solver.solve()
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/optimization/rol_solver.py", line 217, in solve
    self.solver.solve()
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/optimization/rol_solver.py", line 23, in gradient
    self.deriv = self.rf.derivative()  # forget=False, project=False)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/reduced_functional.py", line 61, in derivative
    derivatives = compute_gradient(self.functional,
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/drivers.py", line 29, in compute_gradient
    tape.evaluate_adj(markings=True)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 140, in evaluate_adj
    self._blocks[i].evaluate_adj(markings=markings)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/block.py", line 127, in evaluate_adj
    prepared = self.prepare_evaluate_adj(inputs, adj_inputs, relevant_dependencies)
  File "/home/sia/firedrake/src/pyadjoint/dolfin_adjoint_common/blocks/solving.py", line 146, in prepare_evaluate_adj
    adj_sol, adj_sol_bdy = self._assemble_and_solve_adj_eq(dFdu_form, dJdu, compute_bdy)
  File "/home/sia/firedrake/src/pyadjoint/dolfin_adjoint_common/blocks/solving.py", line 171, in _assemble_and_solve_adj_eq
    self.compat.linalg_solve(dFdu, adj_sol.vector(), dJdu, *self.adj_args, **self.adj_kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/adjoint/solving.py", line 50, in wrapper
    output = solve(*args, **kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/solving.py", line 132, in solve
    return _la_solve(*args, **kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/solving.py", line 243, in _la_solve
    solver.solve(x, b)
  File "/home/sia/firedrake/src/firedrake/firedrake/linear_solver.py", line 158, in solve
    self.ksp.solve(rhs, solution)
KeyboardInterrupt
application called MPI_Abort(MPI_COMM_WORLD, 1) - process 1
Traceback (most recent call last):
  File "adj_reconst_ROL_fromprms.py", line 278, in <module>
    sol = rol_solver.solve()
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/optimization/rol_solver.py", line 217, in solve
    self.solver.solve()
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/optimization/rol_solver.py", line 23, in gradient
    self.deriv = self.rf.derivative()  # forget=False, project=False)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/reduced_functional.py", line 61, in derivative
    derivatives = compute_gradient(self.functional,
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/drivers.py", line 29, in compute_gradient
    tape.evaluate_adj(markings=True)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 140, in evaluate_adj
    self._blocks[i].evaluate_adj(markings=markings)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/block.py", line 127, in evaluate_adj
    prepared = self.prepare_evaluate_adj(inputs, adj_inputs, relevant_dependencies)
  File "/home/sia/firedrake/src/pyadjoint/dolfin_adjoint_common/blocks/solving.py", line 146, in prepare_evaluate_adj
    adj_sol, adj_sol_bdy = self._assemble_and_solve_adj_eq(dFdu_form, dJdu, compute_bdy)
  File "/home/sia/firedrake/src/pyadjoint/dolfin_adjoint_common/blocks/solving.py", line 171, in _assemble_and_solve_adj_eq
    self.compat.linalg_solve(dFdu, adj_sol.vector(), dJdu, *self.adj_args, **self.adj_kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/adjoint/solving.py", line 50, in wrapper
    output = solve(*args, **kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/solving.py", line 132, in solve
    return _la_solve(*args, **kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/solving.py", line 243, in _la_solve
    solver.solve(x, b)
  File "/home/sia/firedrake/src/firedrake/firedrake/linear_solver.py", line 158, in solve
    self.ksp.solve(rhs, solution)
KeyboardInterrupt
application called MPI_Abort(MPI_COMM_WORLD, 1) - process 6
Traceback (most recent call last):
  File "adj_reconst_ROL_fromprms.py", line 278, in <module>
    sol = rol_solver.solve()
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/optimization/rol_solver.py", line 217, in solve
    self.solver.solve()
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/optimization/rol_solver.py", line 23, in gradient
    self.deriv = self.rf.derivative()  # forget=False, project=False)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/reduced_functional.py", line 61, in derivative
    derivatives = compute_gradient(self.functional,
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/drivers.py", line 29, in compute_gradient
    tape.evaluate_adj(markings=True)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 140, in evaluate_adj
    self._blocks[i].evaluate_adj(markings=markings)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/block.py", line 127, in evaluate_adj
    prepared = self.prepare_evaluate_adj(inputs, adj_inputs, relevant_dependencies)
  File "/home/sia/firedrake/src/pyadjoint/dolfin_adjoint_common/blocks/solving.py", line 146, in prepare_evaluate_adj
    adj_sol, adj_sol_bdy = self._assemble_and_solve_adj_eq(dFdu_form, dJdu, compute_bdy)
  File "/home/sia/firedrake/src/pyadjoint/dolfin_adjoint_common/blocks/solving.py", line 171, in _assemble_and_solve_adj_eq
    self.compat.linalg_solve(dFdu, adj_sol.vector(), dJdu, *self.adj_args, **self.adj_kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/adjoint/solving.py", line 50, in wrapper
    output = solve(*args, **kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/solving.py", line 132, in solve
    return _la_solve(*args, **kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/solving.py", line 243, in _la_solve
    solver.solve(x, b)
  File "/home/sia/firedrake/src/firedrake/firedrake/linear_solver.py", line 158, in solve
    self.ksp.solve(rhs, solution)
KeyboardInterrupt
application called MPI_Abort(MPI_COMM_WORLD, 1) - process 7
Traceback (most recent call last):
  File "adj_reconst_ROL_fromprms.py", line 278, in <module>
    sol = rol_solver.solve()
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/optimization/rol_solver.py", line 217, in solve
    self.solver.solve()
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/optimization/rol_solver.py", line 23, in gradient
    self.deriv = self.rf.derivative()  # forget=False, project=False)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/reduced_functional.py", line 61, in derivative
    derivatives = compute_gradient(self.functional,
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/drivers.py", line 29, in compute_gradient
    tape.evaluate_adj(markings=True)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 140, in evaluate_adj
    self._blocks[i].evaluate_adj(markings=markings)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/block.py", line 127, in evaluate_adj
    prepared = self.prepare_evaluate_adj(inputs, adj_inputs, relevant_dependencies)
  File "/home/sia/firedrake/src/pyadjoint/dolfin_adjoint_common/blocks/solving.py", line 146, in prepare_evaluate_adj
    adj_sol, adj_sol_bdy = self._assemble_and_solve_adj_eq(dFdu_form, dJdu, compute_bdy)
  File "/home/sia/firedrake/src/pyadjoint/dolfin_adjoint_common/blocks/solving.py", line 171, in _assemble_and_solve_adj_eq
    self.compat.linalg_solve(dFdu, adj_sol.vector(), dJdu, *self.adj_args, **self.adj_kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/adjoint/solving.py", line 50, in wrapper
    output = solve(*args, **kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/solving.py", line 132, in solve
    return _la_solve(*args, **kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/solving.py", line 243, in _la_solve
    solver.solve(x, b)
  File "/home/sia/firedrake/src/firedrake/firedrake/linear_solver.py", line 158, in solve
    self.ksp.solve(rhs, solution)
KeyboardInterrupt
application called MPI_Abort(MPI_COMM_WORLD, 1) - process 9
Traceback (most recent call last):
  File "adj_reconst_ROL_fromprms.py", line 278, in <module>
    sol = rol_solver.solve()
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/optimization/rol_solver.py", line 217, in solve
    self.solver.solve()
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/optimization/rol_solver.py", line 23, in gradient
    self.deriv = self.rf.derivative()  # forget=False, project=False)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/reduced_functional.py", line 61, in derivative
    derivatives = compute_gradient(self.functional,
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/drivers.py", line 29, in compute_gradient
    tape.evaluate_adj(markings=True)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 140, in evaluate_adj
    self._blocks[i].evaluate_adj(markings=markings)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/block.py", line 127, in evaluate_adj
    prepared = self.prepare_evaluate_adj(inputs, adj_inputs, relevant_dependencies)
  File "/home/sia/firedrake/src/pyadjoint/dolfin_adjoint_common/blocks/solving.py", line 146, in prepare_evaluate_adj
    adj_sol, adj_sol_bdy = self._assemble_and_solve_adj_eq(dFdu_form, dJdu, compute_bdy)
  File "/home/sia/firedrake/src/pyadjoint/dolfin_adjoint_common/blocks/solving.py", line 171, in _assemble_and_solve_adj_eq
    self.compat.linalg_solve(dFdu, adj_sol.vector(), dJdu, *self.adj_args, **self.adj_kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/adjoint/solving.py", line 50, in wrapper
    output = solve(*args, **kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/solving.py", line 132, in solve
    return _la_solve(*args, **kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/solving.py", line 243, in _la_solve
    solver.solve(x, b)
  File "/home/sia/firedrake/src/firedrake/firedrake/linear_solver.py", line 158, in solve
    self.ksp.solve(rhs, solution)
KeyboardInterrupt
application called MPI_Abort(MPI_COMM_WORLD, 1) - process 14
Traceback (most recent call last):
  File "adj_reconst_ROL_fromprms.py", line 278, in <module>
    sol = rol_solver.solve()
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/optimization/rol_solver.py", line 217, in solve
    self.solver.solve()
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/optimization/rol_solver.py", line 23, in gradient
    self.deriv = self.rf.derivative()  # forget=False, project=False)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/reduced_functional.py", line 61, in derivative
    derivatives = compute_gradient(self.functional,
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/drivers.py", line 29, in compute_gradient
    tape.evaluate_adj(markings=True)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 140, in evaluate_adj
    self._blocks[i].evaluate_adj(markings=markings)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/block.py", line 127, in evaluate_adj
    prepared = self.prepare_evaluate_adj(inputs, adj_inputs, relevant_dependencies)
  File "/home/sia/firedrake/src/pyadjoint/dolfin_adjoint_common/blocks/solving.py", line 146, in prepare_evaluate_adj
    adj_sol, adj_sol_bdy = self._assemble_and_solve_adj_eq(dFdu_form, dJdu, compute_bdy)
  File "/home/sia/firedrake/src/pyadjoint/dolfin_adjoint_common/blocks/solving.py", line 171, in _assemble_and_solve_adj_eq
    self.compat.linalg_solve(dFdu, adj_sol.vector(), dJdu, *self.adj_args, **self.adj_kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/adjoint/solving.py", line 50, in wrapper
    output = solve(*args, **kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/solving.py", line 132, in solve
    return _la_solve(*args, **kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/solving.py", line 243, in _la_solve
    solver.solve(x, b)
  File "/home/sia/firedrake/src/firedrake/firedrake/linear_solver.py", line 158, in solve
    self.ksp.solve(rhs, solution)
KeyboardInterrupt
application called MPI_Abort(MPI_COMM_WORLD, 1) - process 15
Traceback (most recent call last):
  File "adj_reconst_ROL_fromprms.py", line 278, in <module>
    sol = rol_solver.solve()
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/optimization/rol_solver.py", line 217, in solve
    self.solver.solve()
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/optimization/rol_solver.py", line 23, in gradient
    self.deriv = self.rf.derivative()  # forget=False, project=False)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/reduced_functional.py", line 61, in derivative
    derivatives = compute_gradient(self.functional,
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/drivers.py", line 29, in compute_gradient
    tape.evaluate_adj(markings=True)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 140, in evaluate_adj
    self._blocks[i].evaluate_adj(markings=markings)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/block.py", line 127, in evaluate_adj
    prepared = self.prepare_evaluate_adj(inputs, adj_inputs, relevant_dependencies)
  File "/home/sia/firedrake/src/pyadjoint/dolfin_adjoint_common/blocks/solving.py", line 146, in prepare_evaluate_adj
    adj_sol, adj_sol_bdy = self._assemble_and_solve_adj_eq(dFdu_form, dJdu, compute_bdy)
  File "/home/sia/firedrake/src/pyadjoint/dolfin_adjoint_common/blocks/solving.py", line 171, in _assemble_and_solve_adj_eq
    self.compat.linalg_solve(dFdu, adj_sol.vector(), dJdu, *self.adj_args, **self.adj_kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/adjoint/solving.py", line 50, in wrapper
    output = solve(*args, **kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/solving.py", line 132, in solve
    return _la_solve(*args, **kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/solving.py", line 243, in _la_solve
    solver.solve(x, b)
  File "/home/sia/firedrake/src/firedrake/firedrake/linear_solver.py", line 158, in solve
    self.ksp.solve(rhs, solution)
KeyboardInterrupt
application called MPI_Abort(MPI_COMM_WORLD, 1) - process 0
Traceback (most recent call last):
  File "adj_reconst_ROL_fromprms.py", line 278, in <module>
    sol = rol_solver.solve()
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/optimization/rol_solver.py", line 217, in solve
    self.solver.solve()
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/optimization/rol_solver.py", line 23, in gradient
    self.deriv = self.rf.derivative()  # forget=False, project=False)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/reduced_functional.py", line 61, in derivative
    derivatives = compute_gradient(self.functional,
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/drivers.py", line 29, in compute_gradient
    tape.evaluate_adj(markings=True)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 140, in evaluate_adj
    self._blocks[i].evaluate_adj(markings=markings)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/block.py", line 127, in evaluate_adj
    prepared = self.prepare_evaluate_adj(inputs, adj_inputs, relevant_dependencies)
  File "/home/sia/firedrake/src/pyadjoint/dolfin_adjoint_common/blocks/solving.py", line 146, in prepare_evaluate_adj
    adj_sol, adj_sol_bdy = self._assemble_and_solve_adj_eq(dFdu_form, dJdu, compute_bdy)
  File "/home/sia/firedrake/src/pyadjoint/dolfin_adjoint_common/blocks/solving.py", line 171, in _assemble_and_solve_adj_eq
    self.compat.linalg_solve(dFdu, adj_sol.vector(), dJdu, *self.adj_args, **self.adj_kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/adjoint/solving.py", line 50, in wrapper
    output = solve(*args, **kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/solving.py", line 132, in solve
    return _la_solve(*args, **kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/solving.py", line 243, in _la_solve
    solver.solve(x, b)
  File "/home/sia/firedrake/src/firedrake/firedrake/linear_solver.py", line 158, in solve
    self.ksp.solve(rhs, solution)
KeyboardInterrupt
application called MPI_Abort(MPI_COMM_WORLD, 1) - process 4
Traceback (most recent call last):
  File "adj_reconst_ROL_fromprms.py", line 278, in <module>
    sol = rol_solver.solve()
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/optimization/rol_solver.py", line 217, in solve
    self.solver.solve()
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/optimization/rol_solver.py", line 23, in gradient
    self.deriv = self.rf.derivative()  # forget=False, project=False)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/reduced_functional.py", line 61, in derivative
    derivatives = compute_gradient(self.functional,
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/drivers.py", line 29, in compute_gradient
    tape.evaluate_adj(markings=True)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 140, in evaluate_adj
    self._blocks[i].evaluate_adj(markings=markings)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/block.py", line 127, in evaluate_adj
    prepared = self.prepare_evaluate_adj(inputs, adj_inputs, relevant_dependencies)
  File "/home/sia/firedrake/src/pyadjoint/dolfin_adjoint_common/blocks/solving.py", line 146, in prepare_evaluate_adj
    adj_sol, adj_sol_bdy = self._assemble_and_solve_adj_eq(dFdu_form, dJdu, compute_bdy)
  File "/home/sia/firedrake/src/pyadjoint/dolfin_adjoint_common/blocks/solving.py", line 171, in _assemble_and_solve_adj_eq
    self.compat.linalg_solve(dFdu, adj_sol.vector(), dJdu, *self.adj_args, **self.adj_kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/adjoint/solving.py", line 50, in wrapper
    output = solve(*args, **kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/solving.py", line 132, in solve
    return _la_solve(*args, **kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/solving.py", line 243, in _la_solve
    solver.solve(x, b)
  File "/home/sia/firedrake/src/firedrake/firedrake/linear_solver.py", line 158, in solve
    self.ksp.solve(rhs, solution)
KeyboardInterrupt
application called MPI_Abort(MPI_COMM_WORLD, 1) - process 10
Traceback (most recent call last):
  File "adj_reconst_ROL_fromprms.py", line 278, in <module>
    sol = rol_solver.solve()
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/optimization/rol_solver.py", line 217, in solve
    self.solver.solve()
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/optimization/rol_solver.py", line 23, in gradient
    self.deriv = self.rf.derivative()  # forget=False, project=False)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/reduced_functional.py", line 61, in derivative
    derivatives = compute_gradient(self.functional,
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/drivers.py", line 29, in compute_gradient
    tape.evaluate_adj(markings=True)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 140, in evaluate_adj
    self._blocks[i].evaluate_adj(markings=markings)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/block.py", line 127, in evaluate_adj
    prepared = self.prepare_evaluate_adj(inputs, adj_inputs, relevant_dependencies)
  File "/home/sia/firedrake/src/pyadjoint/dolfin_adjoint_common/blocks/solving.py", line 146, in prepare_evaluate_adj
    adj_sol, adj_sol_bdy = self._assemble_and_solve_adj_eq(dFdu_form, dJdu, compute_bdy)
  File "/home/sia/firedrake/src/pyadjoint/dolfin_adjoint_common/blocks/solving.py", line 171, in _assemble_and_solve_adj_eq
    self.compat.linalg_solve(dFdu, adj_sol.vector(), dJdu, *self.adj_args, **self.adj_kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/adjoint/solving.py", line 50, in wrapper
    output = solve(*args, **kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/solving.py", line 132, in solve
    return _la_solve(*args, **kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/solving.py", line 243, in _la_solve
    solver.solve(x, b)
  File "/home/sia/firedrake/src/firedrake/firedrake/linear_solver.py", line 158, in solve
    self.ksp.solve(rhs, solution)
KeyboardInterrupt
application called MPI_Abort(MPI_COMM_WORLD, 1) - process 11
Traceback (most recent call last):
  File "adj_reconst_ROL_fromprms.py", line 278, in <module>
    sol = rol_solver.solve()
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/optimization/rol_solver.py", line 217, in solve
    self.solver.solve()
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/optimization/rol_solver.py", line 23, in gradient
    self.deriv = self.rf.derivative()  # forget=False, project=False)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/reduced_functional.py", line 61, in derivative
    derivatives = compute_gradient(self.functional,
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/drivers.py", line 29, in compute_gradient
    tape.evaluate_adj(markings=True)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 140, in evaluate_adj
    self._blocks[i].evaluate_adj(markings=markings)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/tape.py", line 46, in wrapper
    return function(*args, **kwargs)
  File "/home/sia/firedrake/src/pyadjoint/pyadjoint/block.py", line 127, in evaluate_adj
    prepared = self.prepare_evaluate_adj(inputs, adj_inputs, relevant_dependencies)
  File "/home/sia/firedrake/src/pyadjoint/dolfin_adjoint_common/blocks/solving.py", line 146, in prepare_evaluate_adj
    adj_sol, adj_sol_bdy = self._assemble_and_solve_adj_eq(dFdu_form, dJdu, compute_bdy)
  File "/home/sia/firedrake/src/pyadjoint/dolfin_adjoint_common/blocks/solving.py", line 171, in _assemble_and_solve_adj_eq
    self.compat.linalg_solve(dFdu, adj_sol.vector(), dJdu, *self.adj_args, **self.adj_kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/adjoint/solving.py", line 50, in wrapper
    output = solve(*args, **kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/solving.py", line 132, in solve
    return _la_solve(*args, **kwargs)
  File "/home/sia/firedrake/src/firedrake/firedrake/solving.py", line 243, in _la_solve
    solver.solve(x, b)
  File "/home/sia/firedrake/src/firedrake/firedrake/linear_solver.py", line 158, in solve
    self.ksp.solve(rhs, solution)
KeyboardInterrupt
application called MPI_Abort(MPI_COMM_WORLD, 1) - process 13
